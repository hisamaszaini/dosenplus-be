// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Setting {
  id         Int    @id @default(autoincrement())
  namaRektor String
  nipRektor  String
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum TypeUserRole {
  ADMIN
  DOSEN
  VALIDATOR
}

model User {
  id                   Int        @id @default(autoincrement())
  email                String     @unique
  username             String     @unique
  name                 String
  password             String
  status               UserStatus @default(ACTIVE)
  hashedRefreshToken   String?
  passwordResetToken   String?
  passwordResetExpires DateTime?
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  dosen                Dosen?
  validator            Validator?
  userRoles            UserRole[]
}

model Role {
  id        Int        @id @default(autoincrement())
  name      TypeUserRole     @unique
  userRoles UserRole[]
}

model UserRole {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
}

model Validator {
  id            Int     @id
  user          User    @relation(fields: [id], references: [id], onDelete: Cascade)
  nama          String
  nip           String? @unique
  jenis_kelamin String
  no_hp         String? @unique
}

model Fakultas {
  id   Int    @id @default(autoincrement())
  kode String @unique
  nama String @unique

  prodi Prodi[]
  dosen Dosen[]

  createdAt                 DateTime                    @default(now())
  updateAt                  DateTime                    @updatedAt
  Perkuliahan               Perkuliahan[]
  BimbinganSeminar          BimbinganSeminar[]
  BimbinganKknPknPkl        BimbinganKknPknPkl[]
  PengembanganProgramKuliah PengembanganProgramKuliah[]
  ProdukBahanLainnya        ProdukBahanLainnya[]
  JabatanStruktural         JabatanStruktural[]
  PengembanganDiri          PengembanganDiri[]
}

model Prodi {
  id   Int    @id @default(autoincrement())
  kode String @unique
  nama String @unique

  fakultasId Int
  fakultas   Fakultas @relation(fields: [fakultasId], references: [id])

  dosen Dosen[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  Perkuliahan               Perkuliahan[]
  BimbinganSeminar          BimbinganSeminar[]
  BimbinganKknPknPkl        BimbinganKknPknPkl[]
  PengembanganProgramKuliah PengembanganProgramKuliah[]
  ProdukBahanLainnya        ProdukBahanLainnya[]
  JabatanStruktural         JabatanStruktural[]
  BimbingDosen              BimbingDosen[]
  PengembanganDiri          PengembanganDiri[]
}

model Dosen {
  id              Int              @id
  user            User             @relation(fields: [id], references: [id], onDelete: Cascade)
  nama            String
  nip             String?          @unique
  nuptk           String?          @unique
  jenis_kelamin   String
  no_hp           String?          @unique
  prodiId         Int
  prodi           Prodi            @relation(fields: [prodiId], references: [id])
  fakultasId      Int
  fakultas        Fakultas         @relation(fields: [fakultasId], references: [id])
  jabatan         String?
  dataKepegawaian DataKepegawaian?
  createdAt       DateTime         @default(now())
  updateAt        DateTime         @updatedAt
  pendidikan      Pendidikan[]

  PelaksanaanPendidikan PelaksanaanPendidikan[]
}

model DataKepegawaian {
  id             Int     @id
  npwp           String? @unique
  nama_bank      String?
  no_rek         String?
  bpjs_kesehatan String?
  bpjs_tkerja    String?
  no_kk          String?
  dosen          Dosen   @relation(fields: [id], references: [id], onDelete: Cascade)
}

enum Jenjang {
  S1
  S2
  S3
}

enum KategoriPendidikan {
  FORMAL
  DIKLAT
}

model Pendidikan {
  id      Int   @id @default(autoincrement())
  dosenId Int
  dosen   Dosen @relation(fields: [dosenId], references: [id])

  kategori KategoriPendidikan
  kegiatan String?
  nilaiPak Int

  filePath  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Formal PendidikanFormal?
  Diklat PendidikanDiklat?
}

model PendidikanFormal {
  id              Int        @id @default(autoincrement())
  pendidikanId    Int        @unique
  pendidikan      Pendidikan @relation(fields: [pendidikanId], references: [id], onDelete: Cascade)
  jenjang         String
  prodi           String
  fakultas        String
  perguruanTinggi String
  lulusTahun      Int
}

model PendidikanDiklat {
  id            Int        @id @default(autoincrement())
  pendidikanId  Int        @unique
  pendidikan    Pendidikan @relation(fields: [pendidikanId], references: [id], onDelete: Cascade)
  jenisDiklat   String
  namaDiklat    String
  penyelenggara String
  peran         String
  tingkatan     String
  jumlahJam     Int
  noSertifikat  String
  tglSertifikat DateTime
  tempat        String
  tglMulai      DateTime
  tglSelesai    DateTime
}

enum NamaSemester {
  GENAP
  GANJIL
}

model Semester {
  id           Int          @id @default(autoincrement())
  kode         Int
  nama         String
  tipe         NamaSemester
  tahunMulai   Int
  tahunSelesai Int
  status       Boolean

  createdAt             DateTime                @default(now())
  updateAt              DateTime                @updatedAt
  PelaksanaanPendidikan PelaksanaanPendidikan[]

  @@index([tipe])
  @@index([tahunMulai, tahunSelesai])
}

enum KategoriKegiatan {
  PERKULIAHAN
  BIMBINGAN_SEMINAR
  BIMBINGAN_TUGAS_AKHIR
  BIMBINGAN_KKN_PKN_PKL
  PENGUJI_UJIAN_AKHIR
  PEMBINA_KEGIATAN_MHS
  PENGEMBANGAN_PROGRAM
  BAHAN_PENGAJARAN
  ORASI_ILMIAH
  JABATAN_STRUKTURAL
  BIMBING_DOSEN
  DATA_SERING_PENCAKOKAN
  PENGEMBANGAN_DIRI
}

enum JenisKegiatan {
  DOSEN_PEMBIMBING
  DOSEN_PENGUJI
  PEMBINA
  PENULIS_BUKU
  NARASUMBER
  PENGEMBANGAN
}

enum JabatanFungsional {
  ASISTEN_AHLI
  LEKTOR
  LEKTOR_KEPALA
  GURU_BESAR
}

model PelaksanaanPendidikan {
  id         Int              @id @default(autoincrement())
  dosenId    Int
  semesterId Int
  kategori   KategoriKegiatan
  nilaiPak   Float            @default(0)
  filePath   String

  dosen    Dosen    @relation(fields: [dosenId], references: [id])
  semester Semester @relation(fields: [semesterId], references: [id])

  perkuliahan          Perkuliahan?
  bimbinganSeminar     BimbinganSeminar?
  bimbinganKknPknPkl   BimbinganKknPknPkl?
  bimbinganTugasAkhir  BimbinganTugasAkhir?
  pengujiUjianAkhir    PengujiUjianAkhir?
  pembinaKegiatanMhs   PembinaKegiatanMhs?
  pengembanganProgram  PengembanganProgramKuliah?
  bahanPengajaran      BahanPengajaran?
  orasiIlmiah          OrasiIlmiah?
  jabatanStruktural    JabatanStruktural?
  bimbingDosen         BimbingDosen?
  dataseringPencakokan DataseringPencakokan?
  pengembanganDiri     PengembanganDiri?

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Perkuliahan {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  mataKuliah    String
  sks           Int
  jumlahKelas   Int
  totalSks      Int
  prodiId       Int
  fakultasId    Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
  fakultas    Fakultas              @relation(fields: [fakultasId], references: [id])
}

model BimbinganSeminar {
  id            Int @id @default(autoincrement())
  pelaksanaanId Int @unique
  prodiId       Int
  fakultasId    Int
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
  fakultas    Fakultas              @relation(fields: [fakultasId], references: [id])
}

enum JenisKKNPKNPKL {
  KKN
  PKN
  PKL
}

model BimbinganKknPknPkl {
  id            Int            @id @default(autoincrement())
  pelaksanaanId Int            @unique
  jenis         JenisKKNPKNPKL
  prodiId       Int
  fakultasId    Int
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
  fakultas    Fakultas              @relation(fields: [fakultasId], references: [id])
}

model BimbinganTugasAkhir {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  jenis         String
  peran         String
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
}

model PengujiUjianAkhir {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  peran         String
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
}

model PembinaKegiatanMhs {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  namaKegiatan  String
  luaran        String

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
}

model PengembanganProgramKuliah {
  id                  Int    @id @default(autoincrement())
  pelaksanaanId       Int    @unique
  programPengembangan String
  prodiId             Int
  fakultasId          Int
  mataKuliah          String

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
  fakultas    Fakultas              @relation(fields: [fakultasId], references: [id])
}

enum JenisBahanPengajaran {
  BUKU_AJAR
  PRODUK_LAIN
}

model BahanPengajaran {
  id            Int                  @id @default(autoincrement())
  pelaksanaanId Int                  @unique
  jenis         JenisBahanPengajaran

  bukuAjarId   Int? @unique
  produkLainId Int? @unique

  bukuAjar   BukuAjar?           @relation("BukuAjarToBahanPengajaran", fields: [bukuAjarId], references: [id])
  produkLain ProdukBahanLainnya? @relation("ProdukLainToBahanPengajaran", fields: [produkLainId], references: [id])

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
}

model BukuAjar {
  id            Int      @id @default(autoincrement())
  judul         String
  tglTerbit     DateTime
  penerbit      String
  jumlahHalaman Int
  isbn          String?

  bahanPengajaran BahanPengajaran? @relation("BukuAjarToBahanPengajaran")
}

model ProdukBahanLainnya {
  id            Int    @id @default(autoincrement())
  jenisProduk   String
  judul         String
  jumlahHalaman Int
  mataKuliah    String
  prodiId       Int
  fakultasId    Int

  prodi    Prodi    @relation(fields: [prodiId], references: [id])
  fakultas Fakultas @relation(fields: [fakultasId], references: [id])

  bahanPengajaran BahanPengajaran? @relation("ProdukLainToBahanPengajaran")
}

enum Tingkat {
  LOKAL
  DAERAH
  NASIONAL
  INTERNASIONAL
}

model OrasiIlmiah {
  id            Int      @id @default(autoincrement())
  pelaksanaanId Int      @unique
  namaKegiatan  String
  deskripsi     String?
  tingkat       Tingkat
  penyelenggara String
  tanggal       DateTime

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
}

model JabatanStruktural {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  namaJabatan   String
  prodiId       Int
  fakultasId    Int
  afiliasi      String

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
  fakultas    Fakultas              @relation(fields: [fakultasId], references: [id])
}

enum JenisBimbingan {
  REGULER
  PENCAKOKAN
}

model BimbingDosen {
  id             Int               @id @default(autoincrement())
  pelaksanaanId  Int               @unique
  prodiId        Int
  tglMulai       DateTime
  tglSelesai     DateTime
  jenisBimbingan JenisBimbingan
  jabatan        JabatanFungsional
  bidangAhli     String
  deskripsi      String?
  jumlahDsn      Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
}

enum JenisDatasering {
  DATASERING
  PENCAKOKAN
}

model DataseringPencakokan {
  id              Int                   @id @default(autoincrement())
  pelaksanaanId   Int                   @unique
  perguruanTinggi String
  jenis           JenisDatasering
  tglMulai        DateTime
  tglSelesai      DateTime
  bidangAhli      String
  pelaksanaan     PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
}

model PengembanganDiri {
  id            Int      @id @default(autoincrement())
  pelaksanaanId Int      @unique
  namaKegiatan  String
  deskripsi     String?
  tglMulai      DateTime
  tglSelesai    DateTime
  penyelenggara String
  tempat        String
  lamaJam       Int //Jam
  prodiId       Int
  fakultasId    Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id])
  prodi       Prodi                 @relation(fields: [prodiId], references: [id])
  fakultas    Fakultas              @relation(fields: [fakultasId], references: [id])
}