// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Setting {
  id         Int    @id @default(autoincrement())
  namaRektor String
  nipRektor  String
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum TypeUserRole {
  ADMIN
  DOSEN
  VALIDATOR
}

enum StatusValidasi {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id                    Int                     @id @default(autoincrement())
  email                 String                  @unique
  username              String                  @unique
  name                  String
  password              String
  status                UserStatus              @default(ACTIVE)
  fotoPath              String?
  hashedRefreshToken    String?
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  dosen                 Dosen?
  validator             Validator?
  userRoles             UserRole[]
  ActivityLog           ActivityLog[]
  Pendidikan            Pendidikan[]
  PendingUpdateDosen    PendingUpdateDosen[]
  PelaksanaanPendidikan PelaksanaanPendidikan[]
  Penelitian            Penelitian[]
  Pengabdian            Pengabdian[]
  Penunjang             Penunjang[]
}

model Role {
  id        Int          @id @default(autoincrement())
  name      TypeUserRole @unique
  userRoles UserRole[]
}

model UserRole {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
}

model Validator {
  id            Int     @id
  user          User    @relation(fields: [id], references: [id], onDelete: Cascade)
  nama          String
  nip           String? @unique
  jenis_kelamin String
  no_hp         String? @unique
}

model Fakultas {
  id   Int    @id @default(autoincrement())
  kode String @unique
  nama String @unique

  prodi Prodi[]
  dosen Dosen[]

  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  Perkuliahan               Perkuliahan[]
  BimbinganSeminar          BimbinganSeminar[]
  BimbinganKknPknPkl        BimbinganKknPknPkl[]
  PengembanganProgramKuliah PengembanganProgramKuliah[]
  JabatanStruktural         JabatanStruktural[]
  PengembanganDiri          PengembanganDiri[]
  PendingUpdateDosen        PendingUpdateDosen[]
  BahanPengajaran           BahanPengajaran[]
}

model Prodi {
  id   Int    @id @default(autoincrement())
  kode String @unique
  nama String @unique

  fakultasId Int?
  fakultas   Fakultas? @relation(fields: [fakultasId], references: [id], onDelete: SetNull)

  dosen Dosen[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Perkuliahan               Perkuliahan[]
  BimbinganSeminar          BimbinganSeminar[]
  BimbinganKknPknPkl        BimbinganKknPknPkl[]
  PengembanganProgramKuliah PengembanganProgramKuliah[]
  JabatanStruktural         JabatanStruktural[]
  BimbingDosen              BimbingDosen[]
  PengembanganDiri          PengembanganDiri[]
  PendingUpdateDosen        PendingUpdateDosen[]
  BahanPengajaran           BahanPengajaran[]
}

model Dosen {
  id              Int              @id
  user            User             @relation(fields: [id], references: [id], onDelete: Cascade)
  nama            String
  nip             String?          @unique
  nuptk           String?          @unique
  jenis_kelamin   String
  no_hp           String?          @unique
  prodiId         Int?
  prodi           Prodi?           @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultasId      Int?
  fakultas        Fakultas?        @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
  jabatan         String
  dataKepegawaian DataKepegawaian?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pendidikan            Pendidikan[]
  pelaksanaanPendidikan PelaksanaanPendidikan[]
  PendingUpdateDosen    PendingUpdateDosen?
  Penelitian            Penelitian[]
  Pengabdian            Pengabdian[]
  Penunjang             Penunjang[]
}

model DataKepegawaian {
  id             Int     @id
  npwp           String?
  nama_bank      String?
  no_rek         String?
  bpjs_kesehatan String?
  bpjs_tkerja    String?
  no_kk          String?
  dosen          Dosen   @relation(fields: [id], references: [id], onDelete: Cascade)
}

model PendingUpdateDosen {
  id      Int   @id @default(autoincrement())
  dosenId Int   @unique
  dosen   Dosen @relation(fields: [dosenId], references: [id], onDelete: Cascade)

  // === Biodata ===
  nama          String
  nip           String?
  nuptk         String?
  jenis_kelamin String
  no_hp         String?
  prodiId       Int?
  prodi         Prodi?    @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultasId    Int?
  fakultas      Fakultas? @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
  jabatan       String?
  fotoPath      String?

  // === Data Kepegawaian ===
  npwp           String?
  nama_bank      String?
  no_rek         String?
  bpjs_kesehatan String?
  bpjs_tkerja    String?
  no_kk          String?

  // === Metadata ===
  status     StatusValidasi @default(PENDING)
  reviewerId Int?
  reviewer   User?          @relation(fields: [reviewerId], references: [id], onDelete: SetNull)
  catatan    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Jenjang {
  S1
  S2
  S3
}

enum KategoriPendidikan {
  FORMAL
  DIKLAT
}

model Pendidikan {
  id      Int   @id @default(autoincrement())
  dosenId Int
  dosen   Dosen @relation(fields: [dosenId], references: [id])

  kategori KategoriPendidikan
  nilaiPak Float              @default(0)

  filePath String

  statusValidasi StatusValidasi @default(PENDING)
  reviewerId     Int?
  reviewer       User?          @relation(fields: [reviewerId], references: [id], onDelete: SetNull)
  catatan        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Formal PendidikanFormal?
  Diklat PendidikanDiklat?
}

model PendidikanFormal {
  id              Int        @id @default(autoincrement())
  pendidikanId    Int        @unique
  pendidikan      Pendidikan @relation(fields: [pendidikanId], references: [id], onDelete: Cascade)
  jenjang         String
  prodi           String
  fakultas        String
  perguruanTinggi String
  lulusTahun      Int
}

model PendidikanDiklat {
  id            Int        @id @default(autoincrement())
  pendidikanId  Int        @unique
  pendidikan    Pendidikan @relation(fields: [pendidikanId], references: [id], onDelete: Cascade)
  jenisDiklat   String
  namaDiklat    String
  penyelenggara String
  peran         String
  tingkatan     String
  jumlahJam     Int
  noSertifikat  String
  tglSertifikat DateTime
  tempat        String
  tglMulai      DateTime
  tglSelesai    DateTime
}

enum NamaSemester {
  GENAP
  GANJIL
}

enum SemesterStatus {
  ACTIVE
  INACTIVE
}

model Semester {
  id           Int            @id @default(autoincrement())
  kode         Int            @unique
  nama         String         @unique
  tipe         NamaSemester
  tahunMulai   Int
  tahunSelesai Int
  status       SemesterStatus @default(ACTIVE)

  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  PelaksanaanPendidikan PelaksanaanPendidikan[]
  Penelitian            Penelitian[]
  Pengabdian            Pengabdian[]
  Penunjang             Penunjang[]

  @@index([tipe])
  @@index([tahunMulai, tahunSelesai])
}

enum KategoriKegiatan {
  PERKULIAHAN
  BIMBINGAN_SEMINAR
  BIMBINGAN_TUGAS_AKHIR
  BIMBINGAN_KKN_PKN_PKL
  PENGUJI_UJIAN_AKHIR
  PEMBINA_KEGIATAN_MHS
  PENGEMBANGAN_PROGRAM
  BAHAN_PENGAJARAN
  ORASI_ILMIAH
  JABATAN_STRUKTURAL
  BIMBING_DOSEN
  DATA_SERING_PENCAKOKAN
  PENGEMBANGAN_DIRI
}

enum JenisKegiatan {
  DOSEN_PEMBIMBING
  DOSEN_PENGUJI
  PEMBINA
  PENULIS_BUKU
  NARASUMBER
  PENGEMBANGAN
}

enum JabatanFungsional {
  ASISTEN_AHLI
  LEKTOR
  LEKTOR_KEPALA
  GURU_BESAR
}

model PelaksanaanPendidikan {
  id         Int              @id @default(autoincrement())
  dosenId    Int
  semesterId Int?
  kategori   KategoriKegiatan
  nilaiPak   Float            @default(0)
  filePath   String

  dosen    Dosen     @relation(fields: [dosenId], references: [id], onDelete: Cascade)
  semester Semester? @relation(fields: [semesterId], references: [id], onDelete: SetNull)

  statusValidasi StatusValidasi @default(PENDING)
  reviewerId     Int?
  reviewer       User?          @relation(fields: [reviewerId], references: [id], onDelete: SetNull)
  catatan        String?

  perkuliahan          Perkuliahan?
  bimbinganSeminar     BimbinganSeminar?
  bimbinganKknPknPkl   BimbinganKknPknPkl?
  bimbinganTugasAkhir  BimbinganTugasAkhir?
  pengujiUjianAkhir    PengujiUjianAkhir?
  pembinaKegiatanMhs   PembinaKegiatanMhs?
  pengembanganProgram  PengembanganProgramKuliah?
  bahanPengajaran      BahanPengajaran?
  orasiIlmiah          OrasiIlmiah?
  jabatanStruktural    JabatanStruktural?
  bimbingDosen         BimbingDosen?
  dataseringPencakokan DataseringPencakokan?
  pengembanganDiri     PengembanganDiri?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Perkuliahan {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  mataKuliah    String
  sks           Int
  jumlahKelas   Int
  totalSks      Int
  prodiId       Int?
  fakultasId    Int?

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas    Fakultas?             @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
}

model BimbinganSeminar {
  id            Int  @id @default(autoincrement())
  pelaksanaanId Int  @unique
  prodiId       Int?
  fakultasId    Int?
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas    Fakultas?             @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
}

enum JenisKKNPKNPKL {
  KKN
  PKN
  PKL
}

model BimbinganKknPknPkl {
  id            Int            @id @default(autoincrement())
  pelaksanaanId Int            @unique
  jenis         JenisKKNPKNPKL
  prodiId       Int?
  fakultasId    Int?
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas    Fakultas?             @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
}

model BimbinganTugasAkhir {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  jenis         String
  peran         String
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
}

model PengujiUjianAkhir {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  peran         String
  jumlahMhs     Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
}

model PembinaKegiatanMhs {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  namaKegiatan  String
  luaran        String

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
}

model PengembanganProgramKuliah {
  id                  Int    @id @default(autoincrement())
  pelaksanaanId       Int    @unique
  programPengembangan String
  prodiId             Int?
  fakultasId          Int?
  mataKuliah          String

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas    Fakultas?             @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
}

enum JenisBahanPengajaran {
  BUKU_AJAR
  PRODUK_LAIN
}

model BahanPengajaran {
  id            Int                  @id @default(autoincrement())
  pelaksanaanId Int                  @unique
  jenis         JenisBahanPengajaran

  judul         String?
  jumlahHalaman Int?
  mataKuliah    String?
  penerbit      String?
  tglTerbit     DateTime?
  isbn          String?
  jenisProduk   String?
  prodiId       Int?
  fakultasId    Int?

  prodi    Prodi?    @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas Fakultas? @relation(fields: [fakultasId], references: [id], onDelete: SetNull)

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
}

enum Tingkat {
  LOKAL
  DAERAH
  NASIONAL
  INTERNASIONAL
}

model OrasiIlmiah {
  id            Int      @id @default(autoincrement())
  pelaksanaanId Int      @unique
  namaKegiatan  String
  deskripsi     String?
  tingkat       Tingkat
  penyelenggara String
  tgl           DateTime

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
}

model JabatanStruktural {
  id            Int    @id @default(autoincrement())
  pelaksanaanId Int    @unique
  namaJabatan   String
  prodiId       Int?
  fakultasId    Int?
  afiliasi      String

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas    Fakultas?             @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
}

enum JenisBimbingan {
  REGULER
  PENCAKOKAN
}

model BimbingDosen {
  id             Int               @id @default(autoincrement())
  pelaksanaanId  Int               @unique
  prodiId        Int?
  tglMulai       DateTime
  tglSelesai     DateTime
  jenisBimbingan JenisBimbingan
  jabatan        JabatanFungsional
  bidangAhli     String
  deskripsi      String?
  jumlahDsn      Int

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
}

enum JenisDatasering {
  DATASERING
  PENCAKOKAN
}

model DataseringPencakokan {
  id              Int                   @id @default(autoincrement())
  pelaksanaanId   Int                   @unique
  perguruanTinggi String
  jenis           JenisDatasering
  tglMulai        DateTime
  tglSelesai      DateTime
  bidangAhli      String
  pelaksanaan     PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
}

model PengembanganDiri {
  id            Int      @id @default(autoincrement())
  pelaksanaanId Int      @unique
  namaKegiatan  String
  deskripsi     String?
  tglMulai      DateTime
  tglSelesai    DateTime
  penyelenggara String
  tempat        String
  lamaJam       Int //Jam
  prodiId       Int?
  fakultasId    Int?

  pelaksanaan PelaksanaanPendidikan @relation(fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  prodi       Prodi?                @relation(fields: [prodiId], references: [id], onDelete: SetNull)
  fakultas    Fakultas?             @relation(fields: [fakultasId], references: [id], onDelete: SetNull)
}

enum KategoriPenelitian {
  KARYA_ILMIAH
  PENELITIAN_DIDEMINASI
  PENELITIAN_TIDAK_DIPUBLIKASI
  TERJEMAHAN_BUKU
  SUNTINGAN_BUKU
  KARYA_BERHAKI
  KARYA_NON_HAKI
  SENI_NON_HAKI
}

enum JenisKategoriPenelitian {
  // Karya Ilmiah
  BUKU
  BOOK_CHAPTER
  JURNAL

  // Diseminasi
  PROSIDING_DIPUBLIKASIKAN
  SEMINAR_TANPA_PROSIDING
  PROSIDING_TANPA_SEMINAR
  KORAN_MAJALAH

  // HaKI
  PATEN_INTERNASIONAL_INDUSTRI
  PATEN_INTERNASIONAL
  PATEN_NASIONAL_INDUSTRI
  PATEN_NASIONAL
  PATEN_SEDERHANA
  CIPTAAN_DESAIN_GEOGRAFIS
  CIPTAAN_BAHAN_PENGAJAR

  // Non HaKI
  INTERNASIONAL
  NASIONAL
  LOKAL
}

enum SubJenisPenelitian {
  // KARYA ILMIAH BUKU
  BUKU_REFERENSI
  MONOGRAF

  // KARYA ILMIAH BOOK_CHAPTER
  // DAN PROSIDING: SEMINAR_TANPA_PROSIDING PROSIDING_TANPA_SEMINAR
  INTERNASIONAL
  NASIONAL

  // JURNAL INTERNASIONAL
  JURNAL_INTERNASIONAL_BEREPUTASI
  JURNAL_INTERNASIONAL_INDEKS_BEREPUTASI
  JURNAL_INTERNASIONAL
  JURNAL_INTERNASIONAL_TIDAK_TERINDEKS

  // JURNAL NASIONAL
  JURNAL_NASIONAL_DIKTI
  JURNAL_NASIONAL_TERAKREDITASI_P1_P2
  JURNAL_NASIONAL_BERBAHASA_PBB_INDEKS
  JURNAL_NASIONAL_TERAKREDITASI_P3_P4
  JURNAL_NASIONAL

  // JURNAL LAINNYA
  JURNAL_PBB_TIDAK_MEMENUHI

  //DISEMINASI PROSIDING
  PROSIDING_INTERNASIONAL_TERINDEKS
  PROSIDING_INTERNASIONAL_TIDAK_TERINDEKS
  PROSIDING_NASIONAL_TIDAK_TERINDEKS
}

model Penelitian {
  id            Int                      @id @default(autoincrement())
  dosenId       Int
  semesterId    Int?
  kategori      KategoriPenelitian
  jenisKategori JenisKategoriPenelitian?
  subJenis      SubJenisPenelitian?
  judul         String
  tglTerbit     DateTime?
  nilaiPak      Float                    @default(0)
  filePath      String

  dosen    Dosen     @relation(fields: [dosenId], references: [id], onDelete: Cascade)
  semester Semester? @relation(fields: [semesterId], references: [id], onDelete: SetNull)

  statusValidasi StatusValidasi @default(PENDING)
  detail         Json           @default("{}") @db.JsonB
  reviewerId     Int?
  reviewer       User?          @relation(fields: [reviewerId], references: [id], onDelete: SetNull)
  catatan        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum KategoriPengabdian {
  JABATAN_PIMPINAN_LEMBAGA_PEMERINTAHAN
  PENGEMBANGAN_HASIL_PENDIDIKAN_PENELITIAN
  PENYULUHAN_MASYARAKAT_SEMESTER
  PENYULUHAN_MASYARAKAT_KURANG_SEMESTER
  PELAYANAN_MASYARAKAT
  KARYA_TIDAK_DIPUBLIKASIKAN
  KARYA_DIPUBLIKASIKAN
  PENGELOLAAN_JURNAL
}

enum JenisKegiatanPengabdian {
  // PELAYANAN MASYARAKAT
  BIDANG_KEAHLIAN
  PENUGASAN_PT
  FUNGSI_JABATAN
}

enum TingkatPengabdian {
  // Tingkat
  INTERNASIONAL
  NASIONAL
  LOKAL
  INSENDENTAL

  // PENGELOLAAN JURNAL
  JURNAL_INTERNASIONAL
  JURNAL_NASIONAL
}

model Pengabdian {
  id            Int                      @id @default(autoincrement())
  dosenId       Int
  semesterId    Int?
  kategori      KategoriPengabdian
  jenisKegiatan JenisKegiatanPengabdian?
  tingkat       TingkatPengabdian?

  nilaiPak Float  @default(0)
  filePath String

  dosen    Dosen     @relation(fields: [dosenId], references: [id], onDelete: Cascade)
  semester Semester? @relation(fields: [semesterId], references: [id], onDelete: SetNull)

  statusValidasi StatusValidasi @default(PENDING)
  detail         Json           @default("{}") @db.JsonB
  reviewerId     Int?
  reviewer       User?          @relation(fields: [reviewerId], references: [id], onDelete: SetNull)
  catatan        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum KategoriPenunjang {
  ANGGOTA_PANITIA_PT
  ANGGOTA_PANITIA_LEMBAGA_PEMERINTAH
  ANGGOTA_ORGANISASI_PROFESI_INTERNASIONAL
  ANGGOTA_ORGANISASI_PROFESI_NASIONAL
  WAKIL_PT_PANITIA_ANTAR_LEMBAGA
  DELEGASI_NASIONAL_PERTEMUAN_INTERNASIONAL
  AKTIF_PERTEMUAN_ILMIAH_INT_NAS_REG
  AKTIF_PERTEMUAN_ILMIAH_INTERNAL_PT
  TANDA_JASA_PENGHARGAAN
  MENULIS_BUKU_SLTA_NASIONAL
  PRESTASI_OLAHRAGA_HUMANIORA
  TIM_PENILAI_JABATAN_AKADEMIK
}

enum JenisKategoriPenunjang {
  // ANGGOTA PANITIA PT
  KETUA_WAKIL_KEPALA_ANGGOTA_TAHUNAN
  ANGGOTA_TAHUNAN

  // ANGGOTA_PANITIA_LEMBAGA_PEMERINTAH
  KETUA_WAKIL_PANITIA_PUSAT
  ANGGOTA_PANITIA_PUSAT
  KETUA_WAKIL_PANITIA_DAERAH
  ANGGOTA_PANITIA_DAERAH

  // UMUM
  KETUA
  ANGGOTA

  // ANGGOTA ORGANISASI PROFESI
  PENGURUS
  ANGGOTA_ATAS_PERMINTAAN

  // DELEGASI NASIONAL PERTEMUAN INTERNASIONAL
  KETUA_DELEGASI
  ANGGOTA_DELEGASI

  // TANDA JASA PENGHARGAAN
  SATYA_LENCANA_30_TAHUN
  SATYA_LENCANA_20_TAHUN
  SATYA_LENCANA_10_TAHUN
  PENGHARGAAN_INTERNASIONAL
  PENGHARGAAN_NASIONAL
  PENGHARGAAN_DAERAH

  // MENULIS BUKU
  BUKU_SMTA
  BUKU_SMTP
  BUKU_SD

  // PRESTASI_OLAHRAGA_HUMANIORA
  PIAGAM_MEDALI_INTERNASIONAL
  PIAGAM_MEDALI_NASIONAL
  PIAGAM_MEDALI_DAERAH
}

model Penunjang {
  id            Int                     @id @default(autoincrement())
  dosenId       Int
  semesterId    Int?
  kategori      KategoriPenunjang
  jenisKategori JenisKategoriPenunjang?

  // Field umum
  instansi String
  nilaiPak Float  @default(0)
  filePath String

  dosen    Dosen     @relation(fields: [dosenId], references: [id], onDelete: Cascade)
  semester Semester? @relation(fields: [semesterId], references: [id], onDelete: SetNull)

  statusValidasi StatusValidasi @default(PENDING)
  detail         Json           @default("{}") @db.JsonB
  reviewerId     Int?
  reviewer       User?          @relation(fields: [reviewerId], references: [id], onDelete: SetNull)
  catatan        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityLog {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  targetType String
  targetId   Int
  action     String
  createdAt  DateTime @default(now())
}
